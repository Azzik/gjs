GTESTER = ${TESTS_ENVIRONMENT} gtester

########################################################################
TEST_PROGS += gjs-tests

gjs_tests_CFLAGS =				\
	-include $(top_srcdir)/test/test.h	\
	$(AM_CFLAGS)				\
	$(GJSTESTS_CFLAGS)			\
	$(gjs_directory_defines)		\
	-I$(top_srcdir)/test

## -rdynamic makes backtraces work
gjs_tests_LDFLAGS = -rdynamic
gjs_tests_LDADD =		\
	$(GJSTESTS_LIBS)	\
	libgjs.la

gjs_tests_SOURCES =		\
	test/gjs-tests.c	\
	test/test.h		\
	$(gjstest_files_with_tests)

nodist_gjs_tests_SOURCES =	\
	gjstest.c		\
	gjstest.h

## make-tests always updates the ".stamp" files, but only modifies the
## actual gjstest.[hc] if they change. make-tests creates both
## .h.stamp and .c.stamp but if we listed both, make would run
## make-tests twice.
gjstest.h.stamp : scripts/make-tests $(gjstest_files_with_tests)
	$(TESTS_ENVIRONMENT) $(top_srcdir)/scripts/make-tests $(builddir) $(gjstest_files_with_tests)

gjstest.h gjstest.c : gjstest.h.stamp
	@true

TEST_PROGS += gjs-unit

gjs_unit_CPPFLAGS =		\
	$(AM_CPPFLAGS)          \
	$(gjs_directory_defines)\
	$(GJS_CFLAGS)
gjs_unit_LDADD =		\
	$(GJS_LIBS)		\
	libgjs.la

## -rdynamic makes backtraces work
## we -export-dynamic so we can dlopen ourselves and use gobject-introspection
gjs_unit_LDFLAGS=-export-dynamic -rdynamic
gjs_unit_SOURCES =	\
	test/gjs-unit.c


BUILT_SOURCES += $(nodist_gjs_tests_SOURCES)
CLEANFILES +=				\
	$(nodist_gjs_tests_SOURCES)	\
	gjstest.c.stamp			\
	gjstest.h.stamp

EXTRA_DIST +=			\
	scripts/make-tests

########################################################################
TESTS_ENVIRONMENT =				\
	abs_top_srcdir="$(abs_top_srcdir)"	\
	LD_LIBRARY_PATH="$(LD_LIBRARY_PATH):$(FIREFOX_JS_LIBDIR)"

test:	$(gjsnative_LTLIBRARIES) ${TEST_PROGS}
	@test -z "${TEST_PROGS}" || ${GTESTER} --verbose ${TEST_PROGS}

check:	test


EXTRA_DIST +=				\
	test/js/modules/jsUnit.js	\
	test/js/testself.js		\
	test/js/testLang.js		\
	test/js/testMainloop.js		\
	test/js/testSignals.js		\
	test/js/testTweener.js
